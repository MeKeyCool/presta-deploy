version: '3.8'

# WARN : no merge for list with yaml extension fields => we can't add volumes
x-php-service-build: &php-service-build
  build:
    context: ${INFRA_DOCKER_PATH}/build/
    dockerfile: ${INFRA_DOCKER_PATH}/build/Dockerfile.prestashop.7.4.dev
    args:
      - working_dir=/var/www/html
  depends_on:
    psh.db:
      condition: service_healthy
  extra_hosts:
    - "host.docker.internal:host-gateway" # necessary for xdebug reverse networking


services:

  # TODO : review with install / restore / test db / ...
  psh.db:
    image: mysql:5.7-debian
    container_name: psh.db
    hostname: psh.db
    restart: always
    volumes:
      - psh_db_data:/var/lib/mysql
      # - psh_db_init:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: prestashop
      MYSQL_USER: prestashop_admin
      MYSQL_PASSWORD: prestashop_admin
    healthcheck:
      test: "/etc/init.d/mysql status"
      interval: 1s
      timeout: 5s
      retries: 5
    networks:
      - psh_backend

  psh.cli.npm:
    # image: node:17.6-bullseye
    # image: node:14.19-buster
    image: node:16.15-buster
    container_name: psh.cli.npm
    hostname: psh.cli.npm
    user: ${CURRENT_UID}
    working_dir: /home/node/prestashop
    volumes:
      - ${INFRA_SRC_PSH}:/home/node/prestashop:rw
      - ${INFRA_DOCKER_PATH}/prestashop/cache/npm:/.npm:rw
    networks:
      - psh_backend
    # This command should fix `Internal watch failed: ENOSPC: System limit for number of file watchers reached, watch ...` problem
    command: >
      sh -c "echo fs.inotify.max_user_watches=524288 | tee -a /etc/sysctl.conf && 
        sysctl -p"

  psh.cli.php:
    <<: *php-service-build
    container_name: psh.cli.php
    hostname: psh.cli.php
    user: ${CURRENT_UID}
    command: service apache2 stop # stop useless apache while images not dissociated
    volumes:
      - ${INFRA_SRC_PSH}:/var/www/html:rw
      - ${INFRA_DOCKER_PATH}/prestashop/cache/composer:/tmp/composer:rw
      - ${INFRA_ENV_PATH}/prestashop/php.ini:/usr/local/etc/php/conf.d/php-presta.ini:ro
      - ${INFRA_ENV_PATH}/prestashop/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
      - ${INFRA_ENV_PATH}/xdebug/psh.cli.php:/var/logs/xdebug:rw
    environment:
      - COMPOSER_HOME=/tmp/composer
      # - COMPOSER_HOME=${INFRA_COMPOSER_HOME:-$HOME/.config/composer}
      # - COMPOSER_CACHE_DIR=${INFRA_COMPOSER_CACHE_DIR:-$HOME/.cache/composer}
    networks:
      - psh_backend

  psh.app:
    <<: *php-service-build
    container_name: psh.app
    hostname: psh.app
    restart: always
    user: www-data:www-data
    environment:
      # Proxy integration
      # VIRTUAL_HOST: ${PROXY_BASE_HOSTNAME}
      # HTTPS_METHOD: noredirect
      LETSENCRYPT_HOST: ${PROXY_BASE_HOSTNAME_LIST}
    expose:
      - 80
      - 443
    volumes:
      - ${INFRA_DOCKER_PATH}/prestashop/cache/composer:/tmp/composer:rw
      - ${INFRA_SRC_PSH}:/var/www/html:delegated
      # TODO : review this volume usage once Prestashop ssl management properly configured.
      # cf. Dockerfile for consistency.
      - proxy_certs:/etc/nginx/certs
      - ${INFRA_ENV_PATH}/prestashop/php.ini:/usr/local/etc/php/conf.d/php-presta.ini:ro
      - ${INFRA_ENV_PATH}/prestashop/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
      - ${INFRA_ENV_PATH}/xdebug/psh.app:/var/logs/xdebug:rw
    depends_on:
      proxy.letsencrypt:
        condition: service_started
    networks:
      - psh_backend
      - endpoints

volumes:
  psh_db_data:
    driver: local
  # psh_db_init:
  #   driver: local
  #   driver_opts:
  #     o: bind
  #     type: none
  #     device: ${INFRA_ENV_PATH}/prestashop/docker-entrypoint-initdb.d

networks:
  psh_backend:
    name: ${DOCKER_NETWORK}/psh.backend
    driver: bridge
